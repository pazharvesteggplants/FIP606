{
  "hash": "cd56efa5e41b6d67d1393f91a4d4a8ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Análisis ANOVA\"\nformat: html\neditor: visual\n---\n\n\nSe va a trabajar análisis en una base de datos con 3 variables, por lo que se hará un anova para todas juntas y una para cada una.\\\nVamos a tener, un tratamiento, un bloco y un local (el local se puede eliminar al tener solo 1). Al ver que todos son números, hay que colocarlos como si fuera un factor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(performance)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(DHARMa)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsoja<-gsheet2tbl('https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711')\n\nsoja<- soja |>\n  mutate(TRAT=as.factor(TRAT),\n         BLOCO=as.factor(BLOCO))\n```\n:::\n\n\n## Visualización\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfc <- soja |>\n  ggplot(aes(TRAT,DFC))+\n  geom_jitter(width = 0.05, color='gray70')+\n  stat_summary(fun.data='mean_cl_boot', size=0.5, color= 'black', alpha=0.5)\ndfc\n```\n\n::: {.cell-output-display}\n![](aula8_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfer <- soja |>\n  ggplot(aes(TRAT,FER))+\n  geom_jitter(width = 0.05, color='gray70')+\n  stat_summary(fun.data='mean_cl_boot', size=0.5, color= 'black', alpha=0.5)\nfer\n```\n\n::: {.cell-output-display}\n![](aula8_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprod <- soja |>\n  ggplot(aes(TRAT,PROD))+\n  geom_jitter(width = 0.05, color='gray70')+\n  stat_summary(fun.data='mean_cl_boot', size=0.5, color= 'black', alpha=0.5)\nprod\n```\n\n::: {.cell-output-display}\n![](aula8_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum<- prod+fer+dfc\nsum\n```\n\n::: {.cell-output-display}\n![](aula8_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nQueremos explorar los efectos de los tratamientos en cada variable, comparando el tratamiento, viendo si existen diferencias entre cada tratamiento y tambien la variabilidad entre ellos.\n\nViendo cuales son las premisas de anova\n\n## Anova DFC\n\nEsto es factorial, sin embargo en vez de cruzarse, se adicionan.\n\nSe ve que los tratamientos se definen con diferencia altamente significativa\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov_dfc<-lm(DFC~ TRAT + BLOCO,\n             data=soja)\nanova(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: DFC\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 149.299 21.3284 51.5490 8.218e-12 ***\nBLOCO      3   0.461  0.1537  0.3716    0.7743    \nResiduals 21   8.689  0.4138                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: Error variance appears to be homoscedastic (p = 0.532).\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: residuals appear as normally distributed (p = 0.978).\n```\n\n\n:::\n\n```{.r .cell-code}\nmedias_dfc<- emmeans(aov_dfc, ~TRAT)\nmedias_dfc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean    SE df lower.CL upper.CL\n 1     10.88 0.322 21    10.21    11.54\n 2      6.42 0.322 21     5.76     7.09\n 3      6.05 0.322 21     5.38     6.72\n 4      4.75 0.322 21     4.08     5.42\n 5      4.20 0.322 21     3.53     4.87\n 6      4.00 0.322 21     3.33     4.67\n 7      4.08 0.322 21     3.41     4.74\n 8      4.58 0.322 21     3.91     5.24\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n\n\n:::\n\n```{.r .cell-code}\npwpm(medias_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        1       2       3       4       5       6       7       8\n1 [10.87]  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001\n2   4.450 [ 6.42]  0.9896  0.0249  0.0017  0.0006  0.0009  0.0107\n3   4.825   0.375 [ 6.05]  0.1329  0.0107  0.0040  0.0058  0.0628\n4   6.125   1.675   1.300 [ 4.75]  0.9202  0.7173  0.8072  0.9999\n5   6.675   2.225   1.850   0.550 [ 4.20]  0.9998  1.0000  0.9896\n6   6.875   2.425   2.050   0.750   0.200 [ 4.00]  1.0000  0.9020\n7   6.800   2.350   1.975   0.675   0.125  -0.075 [ 4.07]  0.9499\n8   6.300   1.850   1.475   0.175  -0.375  -0.575  -0.500 [ 4.57]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\ncld(medias_dfc, Letters=LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean    SE df lower.CL upper.CL .group\n 6      4.00 0.322 21     3.33     4.67  A    \n 7      4.08 0.322 21     3.41     4.74  A    \n 5      4.20 0.322 21     3.53     4.87  A    \n 8      4.58 0.322 21     3.91     5.24  AB   \n 4      4.75 0.322 21     4.08     5.42  AB   \n 3      6.05 0.322 21     5.38     6.72   BC  \n 2      6.42 0.322 21     5.76     7.09    C  \n 1     10.88 0.322 21    10.21    11.54     D \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\n## Anova FER\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary (MASS)\n\nb<-boxcox(lm(soja$FER~1))\n```\n\n::: {.cell-output-display}\n![](aula8_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#calcular lambda\nlambda <- b$x[which.max(b$y)]\nlambda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1.555556\n```\n\n\n:::\n\n```{.r .cell-code}\n#hacer la formula\nsoja$FER2 <- (soja$FER ^ lambda -1) /lambda\naov_fer<-lm(log(FER2)~ TRAT + BLOCO,\n             data=soja)\naov_fer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = log(FER2) ~ TRAT + BLOCO, data = soja)\n\nCoefficients:\n(Intercept)        TRAT2        TRAT3        TRAT4        TRAT5        TRAT6  \n   -0.41324     -0.06635     -0.14406     -0.18962     -0.16696     -0.19729  \n      TRAT7        TRAT8       BLOCO2       BLOCO3       BLOCO4  \n   -0.15544     -0.14777     -0.04781     -0.06963     -0.03592  \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(forecast)\nanova(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: log(FER2)\n          Df   Sum Sq   Mean Sq F value    Pr(>F)    \nTRAT       7 0.125861 0.0179801 11.3509 6.763e-06 ***\nBLOCO      3 0.020357 0.0067856  4.2837   0.01655 *  \nResiduals 21 0.033265 0.0015840                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: Error variance appears to be homoscedastic (p = 0.658).\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: residuals appear as normally distributed (p = 0.772).\n```\n\n\n:::\n\n```{.r .cell-code}\nmedias_fer<- emmeans(aov_fer, ~TRAT,)\nmedias_fer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean     SE df lower.CL upper.CL\n 1    -0.452 0.0199 21   -0.493   -0.410\n 2    -0.518 0.0199 21   -0.559   -0.477\n 3    -0.596 0.0199 21   -0.637   -0.554\n 4    -0.641 0.0199 21   -0.683   -0.600\n 5    -0.619 0.0199 21   -0.660   -0.577\n 6    -0.649 0.0199 21   -0.690   -0.607\n 7    -0.607 0.0199 21   -0.648   -0.566\n 8    -0.599 0.0199 21   -0.641   -0.558\n\nResults are averaged over the levels of: BLOCO \nResults are given on the log (not the response) scale. \nConfidence level used: 0.95 \n```\n\n\n:::\n\n```{.r .cell-code}\npwpm(medias_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         1        2        3        4        5        6        7        8\n1 [-0.452]   0.3105   0.0010   <.0001   0.0002   <.0001   0.0004   0.0007\n2  0.06635 [-0.518]   0.1587   0.0053   0.0314   0.0029   0.0734   0.1245\n3  0.14406  0.07771 [-0.596]   0.7347   0.9903   0.5707   0.9999   1.0000\n4  0.18962  0.12326  0.04556 [-0.641]   0.9909   1.0000   0.9186   0.8058\n5  0.16696  0.10060  0.02290 -0.02266 [-0.619]   0.9547   0.9999   0.9967\n6  0.19729  0.13093  0.05323  0.00767  0.03033 [-0.649]   0.8058   0.6515\n7  0.15544  0.08909  0.01138 -0.03417 -0.01151 -0.04184 [-0.607]   1.0000\n8  0.14777  0.08142  0.00371 -0.04184 -0.01919 -0.04951 -0.00767 [-0.599]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\ncld(medias_fer, Letters=LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean     SE df lower.CL upper.CL .group\n 6    -0.649 0.0199 21   -0.690   -0.607  A    \n 4    -0.641 0.0199 21   -0.683   -0.600  A    \n 5    -0.619 0.0199 21   -0.660   -0.577  A    \n 7    -0.607 0.0199 21   -0.648   -0.566  AB   \n 8    -0.599 0.0199 21   -0.641   -0.558  AB   \n 3    -0.596 0.0199 21   -0.637   -0.554  AB   \n 2    -0.518 0.0199 21   -0.559   -0.477   BC  \n 1    -0.452 0.0199 21   -0.493   -0.410    C  \n\nResults are averaged over the levels of: BLOCO \nResults are given on the log (not the response) scale. \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\n## Anova PROD\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov_prod<-lm(PROD~ TRAT + BLOCO,\n             data=soja)\nanova(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: PROD\n          Df  Sum Sq Mean Sq F value  Pr(>F)  \nTRAT       7 2993906  427701  2.6367 0.04021 *\nBLOCO      3  105665   35222  0.2171 0.88340  \nResiduals 21 3406431  162211                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(agricolae)\ncv.model(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8.057402\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: PROD\n          Df  Sum Sq Mean Sq F value  Pr(>F)  \nTRAT       7 2993906  427701  2.6367 0.04021 *\nBLOCO      3  105665   35222  0.2171 0.88340  \nResiduals 21 3406431  162211                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: Error variance appears to be homoscedastic (p = 0.215).\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: residuals appear as normally distributed (p = 0.542).\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias_prod <- emmeans(aov_prod, ~TRAT)\nmedias_prod\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n TRAT emmean  SE df lower.CL upper.CL\n 1      4219 201 21     3800     4638\n 2      4935 201 21     4516     5354\n 3      5110 201 21     4691     5529\n 4      5140 201 21     4721     5559\n 5      5122 201 21     4703     5541\n 6      5256 201 21     4837     5675\n 7      5128 201 21     4709     5546\n 8      5078 201 21     4659     5497\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n\n\n:::\n\n```{.r .cell-code}\npwpm(medias_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        1       2       3       4       5       6       7      8\n1  [4219]  0.2430  0.0792  0.0640  0.0728  0.0272  0.0700 0.0985\n2  -715.8  [4935]  0.9983  0.9953  0.9974  0.9430  0.9968 0.9995\n3  -890.8  -175.0  [5110]  1.0000  1.0000  0.9994  1.0000 1.0000\n4  -921.0  -205.3   -30.3  [5140]  1.0000  0.9999  1.0000 1.0000\n5  -902.8  -187.0   -12.0    18.3  [5122]  0.9997  1.0000 1.0000\n6 -1037.0  -321.3  -146.3  -116.0  -134.3  [5256]  0.9998 0.9981\n7  -908.3  -192.5   -17.5    12.8    -5.5   128.8  [5127] 1.0000\n8  -859.0  -143.3    31.7    62.0    43.7   178.0    49.2 [5078]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\nmedias_prod_grupo <- cld(medias_prod, Letters=LETTERS)\n```\n:::\n\n\n## Presentación de datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(emmeans)\ndf_prod<- data.frame(medias_prod_grupo)\ndf_prod|>\n  ggplot(aes(TRAT, emmean))+\n  geom_point()+\n  ylim(3000,6500)+\n  geom_errorbar(aes(min = lower.CL,\n                    max = upper.CL),\n                width = 0.1)+\n  annotate(geom = 'text', x= 1.2, y = 4200,\n           label = 'A')\n```\n\n::: {.cell-output-display}\n![](aula8_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nknitr::kable(df_prod |> dplyr::select(TRAT, emmean, .group))\n```\n\n::: {.cell-output-display}\n\n\n|   |TRAT |  emmean|.group |\n|:--|:----|-------:|:------|\n|1  |1    | 4219.25|A      |\n|2  |2    | 4935.00|AB     |\n|8  |8    | 5078.25|AB     |\n|3  |3    | 5110.00|AB     |\n|5  |5    | 5122.00|AB     |\n|7  |7    | 5127.50|AB     |\n|4  |4    | 5140.25|AB     |\n|6  |6    | 5256.25|B      |\n\n\n:::\n\n```{.r .cell-code}\nlibrary(writexl)\nwrite_xlsx(df_prod, 'df.xlsx')\n```\n:::\n\n\n## Importación de datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nriego<-gsheet2tbl('https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1807247585')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\navg_riego <- riego |>\n  group_by(Irrigation,day)|>\n  summarize(avg_severity = mean(severity))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrdc<-ggplot(avg_riego, aes(x = day, y = avg_severity, color = Irrigation)) +\n  geom_line()\n\n\nrdc\n```\n\n::: {.cell-output-display}\n![](aula8_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## Visualización de los datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(epifitter)\ncurve2 <- riego |>\n  group_by(Irrigation, rep)|>\n  summarise(aacpd = AUDPC(day, severity))\ncurve\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfunction (expr, from = NULL, to = NULL, n = 101, add = FALSE, \n    type = \"l\", xname = \"x\", xlab = xname, ylab = NULL, log = NULL, \n    xlim = NULL, ...) \n{\n    sexpr <- substitute(expr)\n    if (is.name(sexpr)) {\n        expr <- call(as.character(sexpr), as.name(xname))\n    }\n    else {\n        if (!((is.call(sexpr) || is.expression(sexpr)) && xname %in% \n            all.vars(sexpr))) \n            stop(gettextf(\"'expr' must be a function, or a call or an expression containing '%s'\", \n                xname), domain = NA)\n        expr <- sexpr\n    }\n    if (dev.cur() == 1L && !isFALSE(add)) {\n        warning(\"'add' will be ignored as there is no existing plot\")\n        add <- FALSE\n    }\n    addF <- isFALSE(add)\n    if (is.null(ylab)) \n        ylab <- deparse(expr)\n    if (is.null(from) || is.null(to)) {\n        xl <- xlim %||% if (!addF) {\n            pu <- par(\"usr\")[1L:2L]\n            if (par(\"xaxs\") == \"r\") \n                pu <- extendrange(pu, f = -1/27)\n            if (par(\"xlog\")) \n                10^pu\n            else pu\n        }\n        else c(0, 1)\n        if (is.null(from)) \n            from <- xl[1L]\n        if (is.null(to)) \n            to <- xl[2L]\n    }\n    lg <- if (length(log)) \n        log\n    else if (!addF && par(\"xlog\")) \n        \"x\"\n    else \"\"\n    if (length(lg) == 0) \n        lg <- \"\"\n    if (grepl(\"x\", lg, fixed = TRUE)) {\n        if (from <= 0 || to <= 0) \n            stop(\"'from' and 'to' must be > 0 with log=\\\"x\\\"\")\n        x <- exp(seq.int(log(from), log(to), length.out = n))\n    }\n    else x <- seq.int(from, to, length.out = n)\n    ll <- list(x = x)\n    names(ll) <- xname\n    y <- eval(expr, envir = ll, enclos = parent.frame())\n    if (length(y) != length(x)) \n        stop(\"'expr' did not evaluate to an object of length 'n'\")\n    if (isTRUE(add)) \n        lines(x = x, y = y, type = type, ...)\n    else plot(x = x, y = y, type = type, xlab = xlab, ylab = ylab, \n        xlim = xlim, log = lg, ...)\n    invisible(list(x = x, y = y))\n}\n<bytecode: 0x000001e274caedd8>\n<environment: namespace:graphics>\n```\n\n\n:::\n\n```{.r .cell-code}\nm_curve<- lm(aacpd ~ Irrigation + factor(rep),\n             data = curve2)\nanova(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: aacpd\n            Df  Sum Sq  Mean Sq F value  Pr(>F)  \nIrrigation   1 0.23602 0.236017  10.605 0.08275 .\nfactor(rep)  2 0.61291 0.306454  13.771 0.06770 .\nResiduals    2 0.04451 0.022254                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(agricolae)\ncv.model(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.097572\n```\n\n\n:::\n\n```{.r .cell-code}\n#cv.model nos habla del coeficiente de diferencia entre las curvas, que es 1.09% lo vual es bastante bajo\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}