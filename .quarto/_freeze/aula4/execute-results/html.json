{
  "hash": "337248c41222fb4f0d2a9d1234c528fe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"aula4\"\nformat: html\neditor: visual\n---\n\n\n# #Importación de datos\n\n#Gracias al paquete datapasta, podemos copiar y pegar bases de datos como si fueran bases de datos en codigo python utilizando paste as tribble o dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(datapasta)\ndat <- tibble::tribble(\n      ~trat, ~rep, ~comp,\n      \"Mg2\",   1L,     9,\n      \"Mg2\",   2L,  12.5,\n      \"Mg2\",   3L,    10,\n      \"Mg2\",   4L,     8,\n      \"Mg2\",   5L,  13.2,\n      \"Mg2\",   6L,    11,\n      \"Mg2\",   7L,  10.8,\n      \"Mg2\",   8L,   9.5,\n      \"Mg2\",   9L,  10.8,\n      \"Mg2\",  10L,  10.4,\n  \"control\",   1L, 13.72,\n  \"control\",   2L, 15.91,\n  \"control\",   3L,  15.7,\n  \"control\",   4L,  14.2,\n  \"control\",   5L,  15.9,\n  \"control\",   6L, 16.54,\n  \"control\",   7L,    18,\n  \"control\",   8L,  14.4,\n  \"control\",   9L, 16.41,\n  \"control\",  10L,    16\n  )\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 3\n   trat      rep  comp\n   <chr>   <int> <dbl>\n 1 Mg2         1   9  \n 2 Mg2         2  12.5\n 3 Mg2         3  10  \n 4 Mg2         4   8  \n 5 Mg2         5  13.2\n 6 Mg2         6  11  \n 7 Mg2         7  10.8\n 8 Mg2         8   9.5\n 9 Mg2         9  10.8\n10 Mg2        10  10.4\n11 control     1  13.7\n12 control     2  15.9\n13 control     3  15.7\n14 control     4  14.2\n15 control     5  15.9\n16 control     6  16.5\n17 control     7  18  \n18 control     8  14.4\n19 control     9  16.4\n20 control    10  16  \n```\n\n\n:::\n\n```{.r .cell-code}\ncomp<-data.frame(check.names = FALSE,\n                `9` = c(12.5,10,8,13.2,11,10.8,\n                        9.5,10.8,10.4,13.72,15.91,15.7,\n                        14.2,15.9,16.54,\n                        18,14.4,16.41,16))\n\ncomp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       9\n1  12.50\n2  10.00\n3   8.00\n4  13.20\n5  11.00\n6  10.80\n7   9.50\n8  10.80\n9  10.40\n10 13.72\n11 15.91\n12 15.70\n13 14.20\n14 15.90\n15 16.54\n16 18.00\n17 14.40\n18 16.41\n19 16.00\n```\n\n\n:::\n:::\n\n\n#Desde una pagina web podemos obtener datos, copiar las tablas y pegarlas como data frame listas, asi como en el siguiente ejemplo tomado de la pagina web\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoblaciones <- tibble::tribble(\n  ~Fecha, ~Densidad,    ~Hombres,    ~Mujeres,  ~Población,\n   2022L,      102L,          NA,          NA, \"5.229.000\",\n   2021L,      101L, \"2.578.741\", \"2.575.216\", \"5.180.000\",\n   2020L,      100L, \"2.564.622\", \"2.558.483\", \"5.128.000\",\n   2019L,       99L, \"2.546.376\", \"2.538.156\", \"5.075.000\",\n   2018L,       98L, \"2.525.472\", \"2.515.262\", \"5.022.000\",\n   2017L,       97L, \"2.502.859\", \"2.490.983\", \"4.966.000\",\n   2016L,       96L, \"2.479.289\", \"2.465.916\", \"4.909.000\",\n   2015L,       95L, \"2.455.070\", \"2.440.173\", \"4.851.000\",\n   2014L,       94L, \"2.430.257\", \"2.414.032\", \"4.793.000\",\n   2013L,       93L, \"2.404.428\", \"2.387.107\", \"4.733.000\",\n   2012L,       91L, \"2.377.400\", \"2.359.193\", \"4.673.000\",\n   2011L,       90L, \"2.349.468\", \"2.330.459\", \"4.613.000\",\n   2010L,       89L, \"2.321.021\", \"2.301.231\", \"4.554.000\",\n   2009L,       87L, \"2.291.917\", \"2.271.211\", \"4.469.000\",\n   2008L,       86L, \"2.261.818\", \"2.240.104\", \"4.404.000\",\n   2007L,       85L, \"2.231.315\", \"2.208.704\", \"4.340.000\",\n   2006L,       84L, \"2.200.829\", \"2.177.342\", \"4.279.000\",\n   2005L,       82L, \"2.170.068\", \"2.145.820\", \"4.215.000\",\n   2004L,       81L, \"2.138.782\", \"2.114.018\", \"4.152.000\",\n   2003L,       80L, \"2.106.901\", \"2.081.709\", \"4.086.000\",\n   2002L,       79L, \"2.074.083\", \"2.048.540\", \"4.022.000\",\n   2001L,       77L, \"2.039.504\", \"2.013.719\", \"3.953.000\",\n   2000L,       75L, \"2.002.605\", \"1.976.587\", \"3.810.000\",\n   1999L,       75L, \"1.963.914\", \"1.937.516\", \"3.838.000\",\n   1998L,       73L, \"1.924.069\", \"1.897.353\", \"3.747.000\",\n   1997L,       72L, \"1.883.219\", \"1.856.202\", \"3.657.000\",\n   1996L,       70L, \"1.841.732\", \"1.814.502\", \"3.565.000\",\n   1995L,       68L, \"1.800.079\", \"1.772.777\", \"3.470.000\",\n   1994L,       66L, \"1.758.226\", \"1.730.927\", \"3.373.000\",\n   1993L,       64L, \"1.716.205\", \"1.689.167\", \"3.275.000\",\n   1992L,       62L, \"1.674.268\", \"1.647.671\", \"3.191.000\",\n   1991L,       61L, \"1.632.684\", \"1.606.731\", \"3.122.000\",\n   1990L,       60L, \"1.591.754\", \"1.566.500\", \"3.051.000\",\n   1989L,       58L, \"1.551.852\", \"1.527.149\", \"2.977.000\",\n   1988L,       57L, \"1.512.773\", \"1.488.688\", \"2.901.000\",\n   1987L,       55L, \"1.473.947\", \"1.450.648\", \"2.824.000\",\n   1986L,       54L, \"1.435.166\", \"1.412.683\", \"2.746.000\",\n   1985L,       52L, \"1.396.589\", \"1.374.874\", \"2.666.000\",\n   1984L,       51L, \"1.358.572\", \"1.337.628\", \"2.588.000\",\n   1983L,       49L, \"1.321.306\", \"1.301.226\", \"2.514.000\",\n   1982L,       48L, \"1.285.040\", \"1.265.740\", \"2.443.000\",\n   1981L,       46L, \"1.249.954\", \"1.231.380\", \"2.372.000\",\n   1980L,       45L, \"1.216.189\", \"1.198.113\", \"2.302.000\",\n   1979L,       46L, \"1.183.549\", \"1.165.709\", \"2.349.258\",\n   1978L,       45L, \"1.151.907\", \"1.134.303\", \"2.286.210\",\n   1977L,       44L, \"1.121.564\", \"1.104.065\", \"2.225.630\",\n   1976L,       42L, \"1.092.518\", \"1.075.026\", \"2.167.544\",\n   1975L,       41L, \"1.064.693\", \"1.047.158\", \"2.111.850\",\n   1974L,       40L, \"1.037.979\", \"1.020.256\", \"2.058.235\",\n   1973L,       39L, \"1.012.096\",   \"994.152\", \"2.006.247\",\n   1972L,       38L,   \"986.856\",   \"968.691\", \"1.955.547\",\n   1971L,       37L,   \"961.980\",   \"943.506\", \"1.905.486\",\n   1970L,       36L,   \"937.247\",   \"918.450\", \"1.855.697\",\n   1969L,       35L,   \"912.558\",   \"893.410\", \"1.805.968\",\n   1968L,       34L,   \"887.868\",   \"868.465\", \"1.756.333\",\n   1967L,       33L,   \"862.766\",   \"843.295\", \"1.706.062\",\n   1966L,       32L,   \"837.030\",   \"817.588\", \"1.654.619\",\n   1965L,       31L,   \"811.096\",   \"791.641\", \"1.602.736\",\n   1964L,       30L,   \"785.063\",   \"765.598\", \"1.550.661\",\n   1963L,       29L,   \"758.976\",   \"739.670\", \"1.498.647\",\n   1962L,       28L,   \"733.055\",   \"713.982\", \"1.447.037\",\n   1961L,       27L,   \"707.489\",   \"688.649\", \"1.396.138\",\n   1960L,       26L,   \"682.455\",   \"663.847\", \"1.346.302\"\n  )\n#Con esto podemos ordenar los datos de menor a mayor\nordered <- poblaciones[order(poblaciones$Fecha), ]\npoblaciones\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 63 × 5\n   Fecha Densidad Hombres   Mujeres   Población\n   <int>    <int> <chr>     <chr>     <chr>    \n 1  2022      102 <NA>      <NA>      5.229.000\n 2  2021      101 2.578.741 2.575.216 5.180.000\n 3  2020      100 2.564.622 2.558.483 5.128.000\n 4  2019       99 2.546.376 2.538.156 5.075.000\n 5  2018       98 2.525.472 2.515.262 5.022.000\n 6  2017       97 2.502.859 2.490.983 4.966.000\n 7  2016       96 2.479.289 2.465.916 4.909.000\n 8  2015       95 2.455.070 2.440.173 4.851.000\n 9  2014       94 2.430.257 2.414.032 4.793.000\n10  2013       93 2.404.428 2.387.107 4.733.000\n# ℹ 53 more rows\n```\n\n\n:::\n:::\n\n\nAhora, con esta nueva base de datos podemos ver la incidencia en una enfermedad, colocando anotaciones acerca de cuál es cada línea.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\npepper<-tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  ) \n\n\npepper |> \n  pivot_longer(2:4,\n               names_to = \"epidemic\",\n               values_to = \"inc\")|>\n  ggplot(aes(t, inc, color = epidemic))+\n  geom_point()+\n  geom_line()+\n  annotate(geom = \"text\",\n           x= 12,\n           y= 0.75,\n           label = \"1\")+\n  annotate(geom = \"text\",\n           x= 25,\n           y= 0.75,\n           label = \"2\")\n```\n\n::: {.cell-output-display}\n![](aula4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## #Tabla de contingencia.\n\n#Con `count` podemos hacer un conteo según lo que necesitemos, en este caso, se contaron los datos según fueran una región y una zona específica.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\ncr |>\n  count(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  region zone             n\n  <chr>  <chr>        <int>\n1 Oromia Bale            30\n2 Oromia Ilu AbaBora     45\n3 Oromia Jimma           45\n4 Oromia West Wellega    45\n5 SNNPR  Bench Maji      45\n6 SNNPR  Gedio           45\n7 SNNPR  Keffa           45\n8 SNNPR  Sheka           45\n9 SNNPR  Sidama          60\n```\n\n\n:::\n:::\n\n\n# Tablas de diferentes variables\n\nCon la librería janitor, podemos unir diferentes tablas en un solo gráfico, mostranto diferentes variables.\n\nComo se puede observar, estas variables primero son separadas, por región, zona y cultivar.\n\nLuego de eso se cuenta la cantidad que existen para cada categoría, añadiendo una variable más, que es el tipo de manejo. Y por último utilizamos el facet wrap para unirlas en un solo gráfico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\ncr |>\n  tabyl(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n region Bale Bench Maji Gedio Ilu AbaBora Jimma Keffa Sheka Sidama West Wellega\n Oromia   30          0     0          45    45     0     0      0           45\n  SNNPR    0         45    45           0     0    45    45     60            0\n```\n\n\n:::\n\n```{.r .cell-code}\n# - - - - - - -\ncr |>\n  tabyl(cultivar, region)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n cultivar Oromia SNNPR\n Improved     23    60\n    Local     50    66\n  Mixture     92   114\n```\n\n\n:::\n\n```{.r .cell-code}\n# - - - - - - -\ncr |>\n  count(farm_management, cultivar) |>\n  ggplot (aes(cultivar, n, fill = farm_management,\n              label = n))+\n  geom_col(position = 'dodge')+\n  theme_bw()+\n  theme(strip.text.x = element_blank(),\n  legend.position = (\"top\"))+\n  geom_text(position = position_dodge(width = 0.9))+\n  facet_wrap(~cultivar, scales = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](aula4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nAquí se hace una comparación entre el tratamiento y el control en un gráfico de barras\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\nmg <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137')\nmg|>\n  group_by(trat)|>\n  summarise(mean_comp = mean(comp),\n            sd_comp = sd(comp))|>\n  ggplot(aes(trat,mean_comp))+\n  geom_col(fill = \"steelblue\", width = 0.5)+\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp,\n                    width = 0.1))\n```\n\n::: {.cell-output-display}\n![](aula4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nGráfico de bigotes. acerca de la media.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg|>\n  group_by(trat)|>\n  summarise(mean_comp = mean(comp),\n            sd_comp = sd(comp))|>\n  ggplot(aes(trat,mean_comp))+\n # geom_jitter(fill = \"steelblue\", width = 0.5)+\n  geom_point (size = 3)+\n  ylim(0,20)+\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp,\n                    width = 0.1))+\n  annotate (geom = \"text\",\n            x = 1, y = 17.5,\n            label = \"*\")\n```\n\n::: {.cell-output-display}\n![](aula4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}